{"version":3,"sources":["components/Loader/index.js","components/RepoItem/index.js","config.js","components/ReposList/index.js","actions/errorActions.js","actions/types.js","components/auth/RegisterModal.js","actions/authActions.js","components/auth/LoginModal.js","components/NavBar/AppNavbar.js","reducers/itemReducer.js","reducers/errorReducer.js","reducers/authReducer.js","reducers/index.js","store.js","components/App/index.js","serviceWorker.js","index.js"],"names":["Loader","loader","className","RepoItem","repo","href","html_url","target","rel","src","owner","avatar_url","alt","login","name","id","description","title","stargazers_count","forks_count","moment","created_at","startOf","fromNow","uri","ReposList","_","useInView","threshold","ref","inView","useState","page","setPage","setLoader","repos","setRepos","useEffect","a","url","fetch","res","json","data","concat","items","fetchRepos","reposList","map","index","key","returnErrors","msg","status","type","payload","RegisterModal","state","modal","email","password","toggle","setState","onChange","e","value","onSubmit","preventDefault","newUser","props","register","prevProps","this","error","isAuthenticated","NavLink","onClick","Modal","isOpen","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Label","for","Input","placeholder","Button","style","marginTop","block","Component","connect","auth","dispatch","body","JSON","stringify","axios","post","headers","then","catch","err","response","LoginModal","user","clearErrors","AppNavbar","Navbar","dark","expand","NavbarBrand","size","NavbarToggler","Collapse","navbar","Nav","NavItem","initialState","loading","token","localStorage","getItem","isLoading","combineReducers","item","action","filter","_id","setItem","removeItem","middleware","thunk","composeEnhancers","compose","store","createStore","rootReducer","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","_REDUX_DEVTOOLS_EXTENSION_","f","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe583c8f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './index.css';\r\n\r\nconst Loader = ({loader}) => loader && (\r\n    <div className=\"loader flex align-center shadow pd-16 mr-bt-16\">\r\n        <div className=\"loader__image shimmer\"></div>\r\n        <div className=\"loader__container\">\r\n            <div className=\"loader__title shimmer mr-none mr-bt-16\"></div>\r\n            <div className=\"loader__text shimmer mr-bt-16\"></div>\r\n            <div className=\"flex flex-end align-center\">\r\n                <div className=\"loader__badg shimmer mr-rt-16\"></div>\r\n                <div className=\"loader__badg shimmer mr-rt-16\"></div>\r\n                <div className=\"loader__text shimmer\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Loader;\r\n\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport './index.css';\r\nimport { GoGitBranch } from 'react-icons/go';\r\n\r\n\r\n\r\n\r\nconst RepoItem = ({repo}) => (\r\n    <div className=\"slds-grid slds-gutters\">\r\n        \r\n        <div className=\"container\">\r\n        <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <img \r\n                className=\"repo-item__image shadow mr-rt-16\" \r\n                src={repo.owner.avatar_url}\r\n                alt={repo.owner.login}\r\n            />\r\n        </a>\r\n        <div className=\"slds-cols\">\r\n            <h2 className=\"repo-item__title mr-none mr-bt-16\">{repo.name}</h2>\r\n            <div className=\"slds-col\" id=\"gitext\">{repo.description}</div>\r\n            <div className=\"flex flex-end align-center\">\r\n                <div \r\n                    className=\"badg badg-star mr-rt-16\" \r\n                    title=\"Repo Stars\">\r\n                    {repo.stargazers_count}\r\n                </div>\r\n                <div \r\n                    className=\"badg mr-rt-16\"\r\n                    title=\"Forks count\">\r\n                    {repo.forks_count}<GoGitBranch />\r\n                                        \r\n                </div>                \r\n                </div>\r\n               \r\n\r\n                <div className=\"repo-item__owner\">\r\n                    {moment(repo.created_at).startOf('day').fromNow()}\r\n                    <span> by {repo.owner.login}</span>\r\n                </div>                \r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default RepoItem;","export const uri = 'https://api.github.com/search/repositories?q=language:Javascript&sort=stars&page=1';","import React, { useState, useEffect } from 'react';\r\nimport { useInView } from 'react-intersection-observer';\r\n\r\nimport Loader from '../Loader';\r\nimport RepoItem from '../RepoItem';\r\nimport { uri } from '../../config';\r\n\r\nconst ReposList = _ => {\r\n    const [ref, inView] = useInView({threshold: 0});\r\n    const [page, setPage] = useState(1);\r\n    const [loader, setLoader] = useState(true);\r\n    const [repos, setRepos] = useState([]);\r\n\r\n    useEffect(_ => {\r\n        async function fetchRepos() {\r\n            setLoader(true);\r\n\r\n            const url = `${uri}${page}`;\r\n            const res = await fetch(url);\r\n            const data = await res.json();\r\n\r\n            setRepos(repos.concat(data.items));\r\n            setPage(page + 1);\r\n            setLoader(false);\r\n        }\r\n\r\n        (inView || page === 1) && fetchRepos();\r\n    }, [inView]);\r\n\r\n    const reposList = repos.map((repo, index) => (\r\n        <RepoItem key={index} repo={repo} />\r\n    ));\r\n\r\n    return (\r\n        <div className=\"repos-list pd-16\">\r\n            <ul className=\"flex flex-column\">{reposList}</ul>\r\n            {!loader && <div ref={ref}></div>}\r\n            <Loader loader={loader} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ReposList;","import { GET_ERRORS, CLEAR_ERRORS } from './types';\r\n\r\n\r\n//return errors\r\nexport const returnErrors = (msg, status, id = null) => {\r\n    return {\r\n        type: GET_ERRORS,\r\n        payload: { msg, status, id }\r\n    };\r\n};\r\n\r\n//CLEAR ERRORS\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS\r\n    };\r\n};\r\n\r\n","export const GET_ITEMS = 'GET_ITEMS';\r\nexport const ADD_ITEM = 'ADD_ITEM';\r\nexport const DELETE_ITEM = 'DELETE_ITEM';\r\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\r\nexport const USER_LOADING = 'USER_LOADING';\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const LOGIN_SUCESS = 'LOGIN_SUCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT_SUCESS = 'LOGOUT_SUCESS';\r\nexport const REGISTER_SUCESS = 'REGISTER_SUCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\nexport const GET_ERRORS = 'GET_ERROS';\r\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink,\r\n  Alert\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { register } from '../../actions/authActions';\r\n\r\n\r\nclass RegisterModal extends Component {\r\n  state = {\r\n    modal: false, //open or not\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    msg: null,\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    register: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated }  = this.props\r\n    if (error !== prevProps.error) {\r\n      if (error.id === 'REGISTER_FAIL') {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n\r\n\r\n   if(this.state.modal) {\r\n     if(isAuthenticated) {\r\n       this.toggle();\r\n    }\r\n  }\r\n}  \r\n\r\n\r\n\r\n    toggle = () => {\r\n      this.setState({\r\n        modal: !this.state.modal,\r\n      });\r\n    };\r\n\r\n    onChange = (e) => {\r\n      this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n    onSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      const { name, email, password } = this.state;\r\n\r\n      const newUser = {\r\n        name,\r\n        email,\r\n        password\r\n      };\r\n\r\n      this.props.register(newUser);\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <NavLink onClick={this.toggle} href=\"#\">\r\n            Register\r\n          </NavLink>\r\n          <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n            <ModalHeader toggle={this.toggle}>Register</ModalHeader>\r\n            <ModalBody>\r\n              { this.state.msg ? <Alert color=\"danger\"> {this.state.msg} </Alert> : null }\r\n              <Form onSubmit={this.onSubmit}>\r\n                <FormGroup>\r\n                  <Label for=\"name\">Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"name\"\r\n                    className=\"mb-3\"\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  <Label for=\"email\">Email</Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"email\"\r\n                    className=\"mb-3\"\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  <Label for=\"password\">Password</Label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"password\"\r\n                    className=\"mb-3\"\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\r\n                    Register\r\n            </Button>\r\n                </FormGroup>\r\n              </Form>\r\n            </ModalBody>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error\r\n  });\r\n\r\n  export default connect(\r\n    mapStateToProps,\r\n    { register })(RegisterModal);\r\n","import axios from \"axios\";\r\nimport { returnErrors } from \"../actions/errorActions\";\r\nimport {\r\n  USER_LOADING,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  REGISTER_SUCESS,\r\n  REGISTER_FAIL,\r\n  LOGOUT_SUCESS,\r\n  LOGIN_FAIL,\r\n  LOGIN_SUCESS\r\n} from \"../actions/types\";\r\n\r\n\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  //USER LOADING\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  axios\r\n    .get('/auth', tokenConfig(getState))\r\n    .then((res) =>\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) => {\r\n      dispatch(returnErrors(err.response.data, err.response.status));\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n      });\r\n    });\r\n};\r\n\r\nexport const register = ({ name, email, password }) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  axios\r\n    .post('/', body, config)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: REGISTER_SUCESS,\r\n        payload: res.data,\r\n      })\r\n    )\r\n    .catch((err) => {\r\n      dispatch(\r\n        returnErrors(err.response.data, err.response.status, \"REGISTER_FAIL\")\r\n      );\r\n      dispatch({\r\n        type: REGISTER_FAIL,\r\n      });\r\n    })\r\n};\r\n\r\nexport const login = ({ email, password }) => (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  axios\r\n    .post('/api/auth', body, config)\r\n    .then((res) =>\r\n      dispatch({\r\n        type: LOGIN_SUCESS,\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch((err) => {\r\n      dispatch(\r\n        returnErrors(err.response.data, err.response.status, \"LOGIN_FAIL\")\r\n      );\r\n      dispatch({\r\n        type: LOGIN_FAIL\r\n      });\r\n    })\r\n};\r\n\r\n\r\nexport const logout = () => {\r\n  return {\r\n    type: LOGOUT_SUCESS\r\n  };\r\n};\r\n\r\nexport const tokenConfig = getState => {\r\n  const token = getState().auth.token;\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\",\r\n    },\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  NavLink,\r\n  Alert\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { login } from '../../actions/authActions';\r\nimport { clearErrors } from '../../actions/errorActions';\r\n\r\n\r\nclass LoginModal extends Component {\r\n  state = {\r\n    modal: false, //open or not\r\n    email: \"\",\r\n    password: \"\",\r\n    msg: null,\r\n  };\r\n\r\n  static propTypes = {\r\n    isAuthenticated: PropTypes.bool,\r\n    error: PropTypes.object.isRequired,\r\n    login: PropTypes.func.isRequired,\r\n    clearErrors: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { error, isAuthenticated }  = this.props\r\n    if (error !== prevProps.error) {\r\n      if (error.id === 'LOGIN_FAIL') {\r\n        this.setState({ msg: error.msg.msg });\r\n      } else {\r\n        this.setState({ msg: null });\r\n      }\r\n    }\r\n//iff auth close modal\r\n\r\n   if(this.state.modal) {\r\n     if(isAuthenticated) {\r\n       this.toggle();\r\n    }\r\n  }\r\n}  \r\n\r\n\r\n\r\n    toggle = () => {\r\n      this.setState({\r\n        modal: !this.state.modal,\r\n      });\r\n    };\r\n\r\n    onChange = (e) => {\r\n      this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n    onSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n    const { email, password } = this.state;\r\n\r\n    const user = {\r\n        email,\r\n        password\r\n    }\r\n\r\n    //attempt to loging\r\n    this.props.login(user);\r\n    };\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <NavLink onClick={this.toggle} href=\"#\">\r\n            Login\r\n          </NavLink>\r\n          <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n            <ModalHeader toggle={this.toggle}>Login</ModalHeader>\r\n            <ModalBody>\r\n              { this.state.msg ? <Alert color=\"danger\"> {this.state.msg} </Alert> : null }\r\n              <Form onSubmit={this.onSubmit}>\r\n                <FormGroup>\r\n                 \r\n                  <Label for=\"email\">Email</Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    placeholder=\"email\"\r\n                    className=\"mb-3\"\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  <Label for=\"password\">Password</Label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    placeholder=\"password\"\r\n                    className=\"mb-3\"\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\r\n                    Login\r\n            </Button>\r\n                </FormGroup>\r\n              </Form>\r\n            </ModalBody>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error\r\n  });\r\n\r\n  export default connect(\r\n    mapStateToProps,\r\n    { login, clearErrors })(LoginModal);\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem    \r\n    \r\n} from 'reactstrap';\r\nimport RegisterModal from '../auth/RegisterModal';\r\n//import Logout from '../auth/Logout';\r\nimport LoginModal from '../auth/LoginModal';\r\nimport { VscGithubInverted } from 'react-icons/vsc'\r\n\r\n\r\n\r\nclass AppNavbar extends Component {\r\n    state = {\r\n        isOpen: false\r\n\r\n    }\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n                        <NavbarBrand id=\"nav1\" href=\"/\" size={48}> \r\n                        <VscGithubInverted id=\"icon1\" size={48}/>\r\n                        {\"   \"}JS Top(i) Reps\r\n                        </NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggle} />\r\n                        <Collapse isOpen={this.state.isOpen} navbar>\r\n                        <Nav className=\"ml-auto\" navbar>   \r\n                            <NavItem>\r\n                                <RegisterModal />\r\n                            </NavItem>\r\n                            <NavItem>                            \r\n                                <LoginModal/>\r\n                            </NavItem>                            \r\n                        </Nav>     \r\n                        </Collapse>                    \r\n                </Navbar>\r\n            </div>\r\n        )\r\n    };\r\n}\r\n\r\nexport default AppNavbar;\r\n\r\n","//STATE GONA GO - ACTIONS - GET - DISPATCH TO REDUCER - FETCH FROM THE SERVER AND DISPATCH TO THE REDUCER\r\n\r\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from '../actions/types';\r\n\r\n\r\nconst initialState = {\r\n        items: [],\r\n        loading: false\r\n};    \r\n\r\nexport default function(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ITEMS:\r\n            return {\r\n                ...state,\r\n            items: action.payload,\r\n            loading: false    \r\n            \r\n            };\r\n        case DELETE_ITEM:\r\n          return { \r\n                ...state, \r\n        items: state.items.filter(item => item._id !== action.payload)\r\n          }; \r\n        case ADD_ITEM:\r\n            return {\r\n                ...state,\r\n        items: [action.payload, ...state.items]        \r\n            };\r\n        case ITEMS_LOADING:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };    \r\n        default: \r\n          return state;\r\n    };      \r\n};            \r\n\r\n\r\n\r\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\r\n\r\nconst initialState = { \r\n    msg: {},\r\n    status: null,\r\n    id: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case GET_ERRORS:\r\n        return {\r\n            msg: action.payload.msg,\r\n            status: action.payload.status,\r\n            id: action.payload.id\r\n        };\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg: {},\r\n                status: null,\r\n                id: null\r\n            };\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","\r\n  import { \r\n  USER_LOADING, \r\n  USER_LOADED, \r\n  AUTH_ERROR, \r\n  LOGIN_SUCESS, \r\n  LOGIN_FAIL, \r\n  LOGOUT_SUCESS, \r\n  REGISTER_SUCESS, \r\n  REGISTER_FAIL\r\n  } from \"../actions/types\"\r\n\r\n\r\n  const initialState = {\r\n      token: localStorage.getItem('token'),\r\n      isAuthenticated: null,\r\n      isLoading: false,\r\n      user: null\r\n  };\r\n\r\n\r\n  export default function (state = initialState, action) {\r\n      switch(action.type) {\r\n          case USER_LOADING:\r\n              return {\r\n                  ...state,\r\n                  isLoading: true\r\n              };\r\n\r\n          case USER_LOADED:\r\n              return {\r\n                  ...state,\r\n                  isAuthenticated: true,\r\n                  isLoading: false,\r\n                  user: action.payload\r\n              };\r\n        case LOGIN_SUCESS:\r\n        case REGISTER_SUCESS:\r\n            localStorage.setItem('token', action.payload.token);\r\n            return {\r\n                ...state,\r\n                ...action.payload, \r\n                isAuthenticated: true,\r\n                isLoading: false,               \r\n            };\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case LOGOUT_SUCESS:\r\n        case REGISTER_FAIL:\r\n        localStorage.removeItem('token');            \r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false\r\n            };\r\n        default:\r\n            return state;\r\n\r\n      }\r\n  }\r\n","import { combineReducers } from \"redux\";\r\nimport itemReducer from \"./itemReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport authReducer from \"./authReducer\";\r\n\r\nexport default combineReducers({\r\n  item: itemReducer,\r\n  error: errorReducer,\r\n  auth: authReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from '../src/reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers = compose;\r\nconst store = createStore(rootReducer, initialState,composeEnhancers(\r\n  applyMiddleware(...middleware), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  ,window._REDUX_DEVTOOLS_EXTENSION_ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\r\n));\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport ReposList from '../ReposList';\r\nimport AppNavbar from '../NavBar/AppNavbar';\r\nimport store from '../../store';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst App = _ => (\r\n  <Provider store={store}> \r\n  <div className=\"center\">\r\n  <AppNavbar/>\r\n  <ReposList />\r\n  </div>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n\r\n\r\n//aaaa\r\n"],"sourceRoot":""}